# Host: 127.0.0.1  (Version: 5.6.31)
# Date: 2017-08-04 17:39:57
# Generator: MySQL-Front 5.3  (Build 2.42)

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE */;
/*!40101 SET SQL_MODE='STRICT_TRANS_TABLES,NO_ENGINE_SUBSTITUTION' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES */;
/*!40103 SET SQL_NOTES='ON' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS */;
/*!40014 SET FOREIGN_KEY_CHECKS=0 */;

#
# Source for table "article_ip"
#

DROP TABLE IF EXISTS `article_ip`;
CREATE TABLE `article_ip` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `ar_id` int(11) NOT NULL COMMENT '文章id',
  `ip` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '客户端ip',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

#
# Data for table "article_ip"
#

INSERT INTO `article_ip` VALUES (2,19,'127.0.0.1','2017-08-03 16:34:08','2017-08-03 16:34:08'),(3,24,'127.0.0.1',NULL,NULL),(4,17,'127.0.0.1','2017-08-03 16:36:59','2017-08-03 16:36:59'),(5,12,'127.0.0.1','2017-08-03 16:37:54','2017-08-03 16:37:54'),(6,24,'127.0.0.1','2017-08-03 17:28:36','2017-08-03 17:28:36'),(7,24,'127.0.0.1','2017-08-03 17:28:40','2017-08-03 17:28:40'),(8,3,'127.0.0.1','2017-08-03 17:29:26','2017-08-03 17:29:26');

#
# Source for table "blog_articles"
#

DROP TABLE IF EXISTS `blog_articles`;
CREATE TABLE `blog_articles` (
  `ar_id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '文章id',
  `ar_title` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '文章标题',
  `ar_class_id` int(11) NOT NULL COMMENT '文章分类id',
  `ar_img_url` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '文章图片地址',
  `ar_hits` int(11) NOT NULL DEFAULT '0' COMMENT '文章浏览量',
  `ar_content` longtext COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '文章内容',
  `ar_status` smallint(6) NOT NULL DEFAULT '1' COMMENT '文章状态：1发布，2草稿',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`ar_id`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

#
# Data for table "blog_articles"
#

INSERT INTO `blog_articles` VALUES (3,'春泥',7,'blog/Articles/35b97b638c22ad110065dee09e36db54.jpg',1,'<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">文章开始前先说个前提；<br/>这个系列的文章我都会把控制器按模块划分了；<br/>示例都是在模块的基础上讲解的；<br/>关于模块先参考上篇文章；<br/><a href=\"https://baijunyao.com/article/117\" target=\"_blank\" style=\"box-sizing: border-box; background-color: transparent; color: rgb(51, 122, 183); text-decoration-line: none; transition: all 0.5s ease;\">写给 thinkphp 开发者的 laravel 系列教程 (三) 目录结构</a></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">正文开始；<br/>如果我们想访问 Admin 模块下的 IndexController 控制器的 index 方法；<br/>在 thinkphp 中是不需要手动定义的；<br/>这根本不算是一个问题；<br/>直接访问&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">https://baijunyao.com/Admin/Index/index</code>&nbsp;即可；<br/>而 laravel 则需要在routes/web.php 文件中定义如下：</p><pre class=\"line-numbers language-php code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">Route::get(&#39;admin/index/index&#39;,&nbsp;&#39;Admin\\IndexController@index&#39;);PHPCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">每写一个方法就要定义一条路由；<br/>从 thinkphp 转到 laravel 的筒子们；<br/>路由是一个必定产生疑惑的地方；<br/>laravel 整天标榜这自己优雅；<br/>这 thinkphp 中都自动完成的东西；<br/>laravel 还需要手动写一大串；<br/>这到底哪优雅了；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">我是一个懒人；<br/>当我知道了我要写那么多路由；<br/>我是拒绝的；<br/>于是我一度在研究如何让 laravel 也像 thinkphp 那么实现自动路由；<br/>终于皇天不负苦心人；<br/>我搞定了这件事；<br/>如果你也是和我一样的懒人；<br/>那么恭喜你；<br/>等我下面给出解决的方案吗？<br/>NO;NO;NO;<br/>我并不打算教你；<br/>因为我在使用 laravel 的过程中；<br/>不断的感受到了 laravel 对于解耦的执着；<br/>当我重构几次项目后；<br/>就理解到了这种自定义路由的灵活；<br/>把上面这堆水拧干了；<br/>核心就是想说服已经习惯 thinkphp 路由的童鞋们接受并使用路由；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">但是如果都像上面那样一条一条定义路由；</p><pre class=\"line-numbers language-php code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">Route::get(&#39;admin/article/index&#39;,&nbsp;&#39;Admin\\ArticleController@index&#39;);Route::get(&#39;admin/article/create&#39;,&nbsp;&#39;Admin\\ArticleController@create&#39;);Route::post(&#39;admin/article/store&#39;,&nbsp;&#39;Admin\\ArticleController@store&#39;);PHPCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">想想也是挺心累的；<br/>那我这里利用&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">group</code>&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">prefix</code>&nbsp;让路由更简洁和更有层级感了；<br/>可以实现像 thinkphp 那样的&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">模块/控制器/方法</code>三级；<br/>给出一个示例；</p><pre class=\"line-numbers language-php code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">//&nbsp;Admin&nbsp;模块Route::group([&#39;namespace&#39;&nbsp;=&gt;&nbsp;&#39;Admin&#39;,&nbsp;&#39;prefix&#39;&nbsp;=&gt;&nbsp;&#39;admin&#39;,&nbsp;&#39;middleware&#39;&nbsp;=&gt;&nbsp;&#39;admin.auth&#39;],&nbsp;function&nbsp;()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;文章管理\r\n&nbsp;&nbsp;&nbsp;&nbsp;Route::group([&#39;prefix&#39;&nbsp;=&gt;&nbsp;&#39;article&#39;],&nbsp;function&nbsp;()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;文章列表\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Route::get(&#39;index&#39;,&nbsp;&#39;ArticleController@index&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;发布文章\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Route::get(&#39;create&#39;,&nbsp;&#39;ArticleController@create&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;...\r\n&nbsp;&nbsp;&nbsp;&nbsp;});\r\n\r\n&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;分类管理\r\n&nbsp;&nbsp;&nbsp;&nbsp;Route::group([&#39;prefix&#39;&nbsp;=&gt;&nbsp;&#39;category&#39;],&nbsp;function&nbsp;()&nbsp;{\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;分类列表\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Route::get(&#39;index&#39;,&nbsp;&#39;CategoryController@index&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;//&nbsp;添加分类\r\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Route::get(&#39;create&#39;,&nbsp;&#39;CategoryController@create&#39;);\r\n&nbsp;&nbsp;&nbsp;&nbsp;});});PHPCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">上面代码中的 namespace 就是相对于 app/Http/Controllers 的命名空间；<br/>路径为 app/Http/Controllers/Admin 的admin模块的 namespace 就是Admin了；<br/>prefix 就是定义 url 中模块和控制器的名字了；<br/>middleware 是中间件；<br/>这里不多说；后续文章将持续讲解；<br/>所以上面示例中定义的 url 分别是；</p><pre class=\"line-numbers\" style=\"box-sizing: border-box; overflow: auto; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 13px; padding: 0px 0px 0px 3.8em; margin-top: 0px; margin-bottom: 0px; line-height: 1.42857; color: rgb(51, 51, 51); word-break: break-all; word-wrap: break-word; background-color: rgb(245, 245, 245); border: 1px solid rgb(204, 204, 204); border-radius: 4px; position: relative; counter-reset: linenumber 0;\">admin/article/index\r\nadmin/article/create\r\nadmin/category/index\r\nadmin/category/create</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">还是原来的配方；熟悉的味道；<br/>这样是不是既符合已有的 thinkphp 习惯；<br/>又不违反 laravel 的规则；<br/><img src=\"https://baijunyao.com/uploads/article/20170723/5974beb782224.jpg\" alt=\"laravel thinkphp route\" title=\"laravel thinkphp route\"/></p><p><br/></p>',1,'2017-07-28 17:00:39','2017-08-03 17:29:26'),(10,'我的梦想',6,'blog/Articles/37c342c0bf44d0d71685e1e17b8fd336.jpg',0,'<p>13131313</p>',1,'2017-07-31 14:09:29','2017-07-31 16:36:31'),(12,'咸鱼',7,'blog/Articles/d80d4a803a3e2ec0d5a7a962a84cc7f0.png',1,'<p>eeee</p>',1,'2017-07-31 14:12:45','2017-08-03 16:37:54'),(14,'2',8,'blog/Articles/6c4bba4fe9502651dbbc5ba2e39ecb5f.png',0,'<p>2222</p>',1,'2017-07-31 14:18:25','2017-07-31 14:18:25'),(15,'88',9,'blog/Articles/795dbec8a96ef283c69ec6e3c32a3849.png',0,'<p>88</p>',1,'2017-07-31 14:24:22','2017-07-31 14:24:22'),(16,'11',8,'blog/Articles/627c65642547e289d6649cdadd0c2c34.png',0,'<p>11</p>',1,'2017-07-31 15:26:23','2017-07-31 15:26:23'),(17,'198',9,'blog/Articles/f73bc2ebd6263479403ee9e13a9bde24.jpg',1,'<p>wwww9</p>',1,'2017-07-31 16:58:23','2017-08-03 16:36:59'),(18,'111111',8,'blog/Articles/4afda7e2f8df4d3be8884e285e25c9f0.jpg',0,'<p>111</p>',1,'2017-07-31 17:03:45','2017-07-31 17:03:45'),(19,'写给thinkphp开发者的laravel系列教程 (三) 目录结构',6,'blog/Articles/5d32ec1ea17a81bea8640b2c45f627d2.jpg',5,'<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">我之前写过详细的thinkphp目录设计总结；<br/><a href=\"https://baijunyao.com/article/60\" target=\"_blank\" style=\"box-sizing: border-box; background-color: transparent; color: rgb(51, 122, 183); text-decoration-line: none; transition: all 0.5s ease;\">thinkphp的目录结构设计经验总结</a><br/>laravel的话；<br/>换laravel真的需要勇气；去面对六眼飞鱼；<br/>目录结构首先就够让新手懵一会了；<br/>这么多目录可怎么下手；<br/>既然是面向thinkphp开发者；<br/>我这里准备先以tp的方式讲；</p><pre class=\"line-numbers language-php code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">laravel-bjyadmin\r\n├─app\r\n│&nbsp;&nbsp;├─Console&nbsp;&nbsp;\r\n│&nbsp;&nbsp;├─Exceptions&nbsp;&nbsp;\r\n│&nbsp;&nbsp;├─Http&nbsp;&nbsp;请求处理\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─Controllers&nbsp;&nbsp;控制器目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─Middleware&nbsp;\r\n│&nbsp;&nbsp;├─Providers\r\n│&nbsp;&nbsp;├─Library&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[+]&nbsp;自定义类库目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─Function&nbsp;&nbsp;[+]&nbsp;自定义函数库\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─Org&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[+]&nbsp;自定义类\r\n│&nbsp;&nbsp;├─Models&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;[+]&nbsp;模型文件夹\r\n├─bootstrap&nbsp;\r\n├─config&nbsp;配置项\r\n├─database&nbsp;\r\n├─public├─resources\r\n│&nbsp;&nbsp;├─assert&nbsp;\r\n│&nbsp;&nbsp;├─lang&nbsp;\r\n│&nbsp;&nbsp;├─views&nbsp;视图\r\n├─routes&nbsp;路由\r\n├─storage&nbsp;\r\n├─testsPHPCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">为了尽快入门；<br/>我把目录简化了下；<br/>先以我备注了中文的目录为主；<br/>其他的目录先暂时忽略了；<br/>laravel也是MVC框架；<br/>咱先掌握了这最基本的三项；<br/>就可以初步的写项目了；</p><pre class=\"line-numbers language-php code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">thinkphp-bjyadmin\r\n├─Application&nbsp;项目逻辑目录\r\n│&nbsp;&nbsp;├─Common&nbsp;公共模块\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─Common&nbsp;&nbsp;公共函数目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─functioin.php&nbsp;公共函数php文件\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─Conf&nbsp;&nbsp;公共配置文件目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─config.php&nbsp;&nbsp;tp的配置&nbsp;用于覆盖框架默认配置项\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─db.php&nbsp;&nbsp;数据库配置&nbsp;用户名&nbsp;密码等\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─webconfig.php&nbsp;&nbsp;项目的配置；网站名；是否开启网站等\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─Controller&nbsp;&nbsp;公共控制器目录&nbsp;\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─BaseController.class.php&nbsp;应用最基础的控制器\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─HomeBaseController.class.php&nbsp;&nbsp;Home基础控制器继承BaseController\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─AdminBaseController.class.php&nbsp;&nbsp;Admin基础控制器继承BaseController\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─UserBaseController.class.php&nbsp;&nbsp;User基础控制器继承BaseController\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─...│&nbsp;&nbsp;│&nbsp;&nbsp;├─Model&nbsp;&nbsp;公共模型目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─BaseModel.class.php&nbsp;&nbsp;应用最基础的Model\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─ArticleModel.class.php&nbsp;文章model&nbsp;&nbsp;继承BaseModel\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─UserModel.class.php&nbsp;&nbsp;用户model&nbsp;继承BaseModel\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─...│&nbsp;&nbsp;│&nbsp;&nbsp;├─Tag&nbsp;&nbsp;公共标签目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─My.class.php&nbsp;&nbsp;自定义的标签库\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─...│&nbsp;&nbsp;├─Home&nbsp;&nbsp;Home模块\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─Controller&nbsp;&nbsp;Home控制器目录&nbsp;继承HomeBaseController\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─ArticleController.class.php&nbsp;文章控制器目录&nbsp;&nbsp;\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─IndexController.class.php&nbsp;&nbsp;首页控制器\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─&nbsp;...&nbsp;&nbsp;│&nbsp;&nbsp;├─Admin&nbsp;&nbsp;Admin模块\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─Controller&nbsp;&nbsp;Admin控制器目录&nbsp;继承AdminBaseController\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─IndexController.class.php&nbsp;&nbsp;后台管理首页控制器\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─&nbsp;...&nbsp;&nbsp;│&nbsp;&nbsp;├─User&nbsp;&nbsp;User模块\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─Controller&nbsp;&nbsp;User控制器目录&nbsp;继承UserBaseController\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─IndexController.class.php&nbsp;&nbsp;用户个人中心首页控制器\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─&nbsp;...&nbsp;&nbsp;PHPCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">thinkphp是以模块划分项目的；<br/>如上我在 laravel-bjyadmin 示例中就划分了 Common 公共模块；<br/>还有 Admin、Home、User模块；<br/>路由就是自动绑定的&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">模块/控制器/方法</code>&nbsp;三级；<br/>模型、控制器、视图、配置项等都是在模块下面；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">反观 laravel；<br/>已经可以初窥自由了；<br/>但是这种自由也会让新手略有不知所措；<br/>那么我们依然可以以 thinkphp 的模式来理解；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">M；<br/>laravel 没有强制定义模型的目录；<br/>默认给了一个 User 模型就是直接给扔到 app 目录下了；<br/>为了防止模型比较多的时候把 app 目录下搞的乱七八糟；<br/>我这里是在 app 目录下建了一个 Models 目录；<br/>所有的模型都放在<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">app/Models</code>目录下；</p><pre class=\"line-numbers language-php code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">app\r\n├─Models&nbsp;模型目录\r\n│&nbsp;&nbsp;├─Category.php&nbsp;&nbsp;分类模型\r\n│&nbsp;&nbsp;├─Tag.php&nbsp;&nbsp;标签模型\r\n│&nbsp;&nbsp;├─Article.php&nbsp;&nbsp;文章模型PHPCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">C；<br/>把控制器放在视图前面讲；<br/>控制器是在<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">app/Http/Controllers</code>目录下；<br/>我依然以 thinkphp-bjyadmin 的结构来划分；</p><pre class=\"line-numbers language-php code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">app\r\n├─Http&nbsp;请求处理目录\r\n│&nbsp;&nbsp;├─Controller&nbsp;&nbsp;控制器目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─admin&nbsp;&nbsp;后台Admin模块\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─IndexController.php&nbsp;后台首页控制器\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─CategoryController.php&nbsp;分类管理控制器\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─home&nbsp;&nbsp;&nbsp;前台Home模块\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─IndexController.php&nbsp;前台首页控制器\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─ArticleController.php&nbsp;文章展示控制器\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─user&nbsp;&nbsp;&nbsp;用户User模块\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─IndexController.php&nbsp;用户首页控制器\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─TagController.php&nbsp;标签管理控制器PHPCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">V；<br/>html视图都是在&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">resources/view</code>&nbsp;目录下；<br/>视图就可以按照控制器的目录来了；</p><pre class=\"line-numbers language-php code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">resources\r\n├─view&nbsp;视图目录\r\n│&nbsp;&nbsp;├─admin&nbsp;&nbsp;后台admin模块下的视图目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─index&nbsp;&nbsp;后台admin模块Index控制器下的视图目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─index.blade.php&nbsp;后台admin模块Index控制器下index方法的视图文件\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─category&nbsp;&nbsp;&nbsp;后台admin模块Category控制器下的视图目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─index.blade.php&nbsp;后台admin模块Category控制器下index方法的视图文件\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─create.blade.php&nbsp;后台admin模块Category控制器下create方法的视图文件\r\n│&nbsp;&nbsp;├─home&nbsp;&nbsp;前台Home模块下的视图目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─index&nbsp;&nbsp;前台Home模块Index控制器下的视图目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─index.blade.php&nbsp;前台Home模块Index控制器下index方法的视图文件\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─article&nbsp;&nbsp;&nbsp;前台Home模块Article控制器下的视图目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─index.blade.php&nbsp;前台Home模块Article控制器下index方法的视图文件\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─create.blade.php&nbsp;前台Home模块Article控制器下create方法的视图文件\r\n│&nbsp;&nbsp;├─user&nbsp;&nbsp;用户User模块下的视图目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─index&nbsp;&nbsp;用户User模块Index控制器下的视图目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─index.blade.php&nbsp;用户User模块Index控制器下index方法的视图文件\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;├─tag&nbsp;&nbsp;&nbsp;用户User模块Tag控制器下的视图目录\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─index.blade.php&nbsp;用户User模块Tag控制器下index方法的视图文件\r\n│&nbsp;&nbsp;│&nbsp;&nbsp;│&nbsp;&nbsp;├─create.blade.php&nbsp;用户User模块Tag控制器下create方法的视图文件PHPCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">thinkphp 模块下是有公共函数文件 function.php ；<br/>laravel 没有定义目录；<br/>我是给定义在&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">app/Library/Function/helpers.php</code>&nbsp;;</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">thinkphp 模块下是有配置项文件的；<br/>laravel 没有按模块；<br/>而是统一放在了 跟目录的&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">config</code>&nbsp;目录下；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">就 mvc 而言的话；<br/>laravel 多了一个定义路由的过程；<br/>路由都是在&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">routes/web.php</code>&nbsp;文件中定义的；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">这里寥寥几句简单把用到的目录先介绍下；<br/>有个初步的印象即可；<br/>后续再详细讲解每个模块；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">我已经在我最新的 laravel-bjyblog 项目中使用这种结构；<br/>想在完整的项目中理解的话；<br/>可以关注&nbsp;<a href=\"https://github.com/baijunyao/laravel-bjyblog\" target=\"_blank\" style=\"box-sizing: border-box; background-color: transparent; color: rgb(51, 122, 183); text-decoration-line: none; transition: all 0.5s ease;\">用laravel重构的白俊遥博客开源代码laravel-bjyblog</a><br/>现在是在内测中；<br/>可能会有大的改动；<br/>不过用来参考还是可以的；<br/>前台的路由为了兼容&nbsp;<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">thinkphp-bjyblog</code>&nbsp;的设计；<br/>没有完全按照本篇文章的讲解；<br/><img src=\"/Articles/upload/image/20170802/1501639200.jpg\" alt=\"\" title=\"\"/></p><p><br/></p>',1,'2017-08-02 10:00:01','2017-08-03 16:34:08'),(24,'composer的初级使用',7,'blog/Articles/4b0bb0a74e803d75edb1182433d4adc2.jpg',6,'<p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">补上一篇文章的坑；<br/>要使用composer首先是要安装它；<br/>mac或者linux系统直接执行下面的命令；</p><pre class=\"line-numbers language-bash code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">php&nbsp;-r&nbsp;&quot;copy(&#39;https://getcomposer.org/installer&#39;,&nbsp;&#39;composer-setup.php&#39;);&quot;php&nbsp;-r&nbsp;&quot;if&nbsp;(hash_file(&#39;SHA384&#39;,&nbsp;&#39;composer-setup.php&#39;)&nbsp;===&nbsp;&#39;669656bab3166a7aff8a7506b8cb2d1c292f042046c5a994c43155c0be6190fa0355160742ab2e1c88d40d5be660b410&#39;)&nbsp;{&nbsp;echo&nbsp;&#39;Installer&nbsp;verified&#39;;&nbsp;}&nbsp;else&nbsp;{&nbsp;echo&nbsp;&#39;Installer&nbsp;corrupt&#39;;&nbsp;unlink(&#39;composer-setup.php&#39;);&nbsp;}&nbsp;echo&nbsp;PHP_EOL;&quot;php&nbsp;composer-setup.php\r\nphp&nbsp;-r&nbsp;&quot;unlink(&#39;composer-setup.php&#39;);&quot;BashCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">windows童鞋直接点击下面链接；<br/><a href=\"https://getcomposer.org/Composer-Setup.exe\" target=\"_blank\" style=\"box-sizing: border-box; background-color: transparent; color: rgb(51, 122, 183); text-decoration-line: none; transition: all 0.5s ease;\">https://getcomposer.org/Composer-Setup.exe</a><br/>安装的过程中需要注意的是要找到php.exe;<br/>选择正确的php路径；<br/>比如说这个样子的；<br/><img src=\"https://baijunyao.com/uploads/article/20170617/59454b7e59cd1.jpg\" alt=\"\" title=\"\"/></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">安装成功的标志就是在命令行输入；</p><pre class=\"line-numbers language-bash code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">composer&nbsp;-vBashCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">显示如下内容；<br/><img src=\"https://baijunyao.com/uploads/article/20170617/59454c7d028ea.jpg\" alt=\"\" title=\"\"/><br/>如果安装成功；<br/>但是提示命令找不到；<br/>那就是环境变量的问题；<br/>至于环境变量怎么搞；<br/>那百度吧；<br/>这个讲起来又得一篇文章；<br/>太拖节奏了；<br/>如果还有更多问题；<br/>那我给出官网；<br/><a href=\"https://getcomposer.org/\" target=\"_blank\" style=\"box-sizing: border-box; background-color: transparent; color: rgb(51, 122, 183); text-decoration-line: none; transition: all 0.5s ease;\">https://getcomposer.org/</a></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">什么；打不开网站；<br/>请相信；我给出的绝对是官网地址；<br/>官网决没有那么容易宕机；<br/>可能是你的人品问题；<br/>赶紧面壁思过；<br/>好好想想原因；<br/>实在不行；就访问中文网站吧；<br/><a href=\"http://www.phpcomposer.com/\" target=\"_blank\" style=\"box-sizing: border-box; background-color: transparent; color: rgb(51, 122, 183); text-decoration-line: none; transition: all 0.5s ease;\">http://www.phpcomposer.com/</a></p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">走到这的；<br/>我就都当成composer已经安装成功的；<br/>那么；因为你懂得的原因；<br/>在中国局域网内；<br/>使用composer是比较慢的；<br/>不过好在国内有镜像；<br/>执行如下命令切换到国内的镜像；</p><pre class=\"line-numbers language-bash code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">composer&nbsp;config&nbsp;-g&nbsp;repo.packagist&nbsp;composer&nbsp;https://packagist.phpcomposer.comBashCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">折腾了这么长时间；<br/>准备工作终于做完了；<br/>百闻不如一run；<br/>咱拿着composer搞个验证码用用吧；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">还记得上篇文章敲黑板画的重点么？<br/>咱先在<a href=\"https://packagist.org/\" target=\"_blank\" style=\"box-sizing: border-box; background-color: transparent; color: rgb(51, 122, 183); text-decoration-line: none; transition: all 0.5s ease;\">packagist</a>上搜captcha<br/><img src=\"https://baijunyao.com/uploads/article/20170612/593d7633e894e.jpg\" alt=\"\" title=\"\"/><br/>按下载量排第一个是google的；<br/>在国内；看见谷歌就绕着走吧；<br/>咱直接看第二个吧；<br/>点开后；是这个样子的；<br/><img src=\"https://baijunyao.com/uploads/article/20170612/593d766b843be.jpg\" alt=\"\" title=\"\"/><br/>可以看到；这里先有一个基本的安装命令；<br/>咱在php项目目录下运行；</p><pre class=\"line-numbers language-bash code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">composer&nbsp;require&nbsp;gregwar/captchaBashCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\"><img src=\"https://baijunyao.com/uploads/article/20170617/59455181393cb.jpg\" alt=\"\" title=\"\"/><br/>安装完成后目录结构是这个样子的；<br/>验证码扩展包就在vendor目录下；<br/>这个咱不需要关注；<br/>如果你的目录没有index.php的话；<br/>哪...这是正常的；<br/>index.php文件是我手动建的用来访问的；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">扩展包安装完；<br/>使用起来就超级简单了；<br/>在index.php文件中引入vendor目录下的autoload.php<br/>然后按照文档复制代码；</p><pre class=\"line-numbers language-php code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">&lt;?phpuse&nbsp;Gregwar\\Captcha\\CaptchaBuilder;require&nbsp;&#39;vendor/autoload.php&#39;;//&nbsp;生成验证码$builder&nbsp;=&nbsp;new&nbsp;CaptchaBuilder;$builder-&gt;build();//&nbsp;显示验证码header(&#39;Content-type:&nbsp;image/jpeg&#39;);$builder-&gt;output();PHPCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">浏览器访问；<br/>验证码已经生成了；<br/><img src=\"https://baijunyao.com/uploads/article/20170618/594553f44e268.jpg\" alt=\"\" title=\"\"/><br/>是不是特别好用；<br/>还有更多验证码的使用方式和样式；<br/>有详细的文档以供参阅；<br/>如果有问题还可以在github上提issues；<br/>全世界的热心程序猿帮你解决bug；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">好了；又到了敲黑板画重点的时候了；<br/>以后；当我们想实现一些常见的功能的时候；<br/>第一步；上packagist搜索扩展包；<br/>第二步；<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">composer require 作者名/扩展包名</code><br/>第三步；<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">require &#39;vendor/autoload.php&#39;</code>;<br/>第四步；按照文档实例化类调用方法<br/>其中第三步只需要require一次即可；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">好了；<br/>安装单个的扩展包咱讲完了；<br/>如果想安装完整的项目怎么办呢？<br/>这次咱搜索 baijunyao&nbsp;<br/><img src=\"https://baijunyao.com/uploads/article/20170618/5945598567f4f.jpg\" alt=\"\" title=\"\"/><br/>直接运行提示的命令；</p><pre class=\"line-numbers language-bash code-toolbar\" style=\"box-sizing: border-box; overflow: auto; font-family: Consolas, Monaco, &quot;Andale Mono&quot;, &quot;Ubuntu Mono&quot;, monospace; font-size: 13px; padding: 1em 1em 1em 3.8em; line-height: 1.5; color: rgb(248, 248, 242); word-break: normal; word-wrap: normal; background-color: rgb(39, 40, 34); border: 1px solid rgb(204, 204, 204); border-radius: 0.3em; text-shadow: rgba(0, 0, 0, 0.3) 0px 1px; tab-size: 4; hyphens: none; position: relative; counter-reset: linenumber 0;\">composer&nbsp;create-project&nbsp;baijunyao/laravel-bjyblogBashCopy</pre><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">这样；只需要一个命令就可以把我的博客项目下载下来了；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">再次敲黑板画重点了；<br/>安装单个扩展包使用的命令是：<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">composer require 作者名/扩展包名</code>;<br/>安装完整的项目使用的命令是：<code style=\"box-sizing: border-box; font-family: Menlo, Monaco, Consolas, &quot;Courier New&quot;, monospace; font-size: 14.4px; padding: 2px 4px; color: rgb(199, 37, 78); background-color: rgb(249, 242, 244); border-radius: 4px;\">composer create-project 作者名/项目名</code>；</p><p style=\"box-sizing: border-box; margin-top: 0px; margin-bottom: 20px; padding: 0px; color: rgb(51, 51, 51); font-family: &quot;Microsoft YaHei&quot;, &quot;Helvetica Neue&quot;, Helvetica, Arial, sans-serif; white-space: normal; background-color: rgb(255, 255, 255);\">OK到这；<br/>下篇文章要用到的知识点也都讲完了；<br/>更深入的留给以后再讲；<br/>名字我都想好了；<br/>就叫composer的中级使用吧；<br/>这就是后话了；<br/>那么接着就要开始laravel系列的文章了；<br/>让我们走进laravel的世界吧；</p><p><br/></p>',1,'2017-08-02 10:06:35','2017-08-03 17:28:40');

#
# Source for table "blog_articles_class"
#

DROP TABLE IF EXISTS `blog_articles_class`;
CREATE TABLE `blog_articles_class` (
  `ar_class_id` int(10) unsigned NOT NULL AUTO_INCREMENT COMMENT '分类id',
  `parent_id` int(11) DEFAULT NULL COMMENT '父id',
  `ar_class_name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL DEFAULT '' COMMENT '分类名。跳转路径',
  `c_name` varchar(255) CHARACTER SET utf8mb4 DEFAULT NULL COMMENT '中文名',
  `type` int(11) DEFAULT NULL COMMENT '几级分类',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`ar_class_id`),
  UNIQUE KEY `blog_articles_class_ar_class_name_unique` (`ar_class_name`)
) ENGINE=InnoDB AUTO_INCREMENT=10 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

#
# Data for table "blog_articles_class"
#

INSERT INTO `blog_articles_class` VALUES (1,0,'Web','前端技术',0,NULL,NULL),(2,0,'Program','后端程序',0,NULL,NULL),(3,0,'Share','资源分享',0,NULL,NULL),(6,1,'PHP',NULL,1,NULL,NULL),(7,1,'JAVA',NULL,1,NULL,NULL),(8,2,'HTML',NULL,1,NULL,NULL),(9,2,'CSS',NULL,1,NULL,NULL);

#
# Source for table "blog_banner"
#

DROP TABLE IF EXISTS `blog_banner`;
CREATE TABLE `blog_banner` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `banner_url` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL COMMENT '轮播图地址',
  `order` int(11) DEFAULT '0' COMMENT '轮播图排序',
  `status` smallint(6) NOT NULL DEFAULT '1' COMMENT '状态',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

#
# Data for table "blog_banner"
#

INSERT INTO `blog_banner` VALUES (2,'blog/banner/banner_02.jpg',2,1,'2017-08-02 13:40:00','2017-08-02 13:40:00'),(3,'blog/banner/banner_03.jpg',3,1,'2017-08-02 13:40:00','2017-08-02 13:40:00'),(6,'blog/banner/7bf39d37a3c2290ded00bfb24e2065f5.jpeg',1,1,'2017-08-02 16:10:07','2017-08-02 16:10:32');

#
# Source for table "blog_logo"
#

DROP TABLE IF EXISTS `blog_logo`;
CREATE TABLE `blog_logo` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

#
# Data for table "blog_logo"
#


#
# Source for table "email_list"
#

DROP TABLE IF EXISTS `email_list`;
CREATE TABLE `email_list` (
  `Id` int(11) NOT NULL AUTO_INCREMENT,
  `email` varchar(255) NOT NULL DEFAULT '' COMMENT '邮箱',
  `status` tinyint(2) NOT NULL DEFAULT '0' COMMENT '邮箱状态：0代表未发送 1代表已发送',
  PRIMARY KEY (`Id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

#
# Data for table "email_list"
#


#
# Source for table "migrations"
#

DROP TABLE IF EXISTS `migrations`;
CREATE TABLE `migrations` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `migration` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `batch` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=9 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

#
# Data for table "migrations"
#

INSERT INTO `migrations` VALUES (1,'2014_10_12_000000_create_users_table',1),(2,'2014_10_12_100000_create_password_resets_table',1),(3,'2017_06_21_160747_create_permissions_table',2),(4,'2017_07_28_095840_create_blog_articles_table',3),(5,'2017_07_28_105104_create_blog_articles_class_table',4),(6,'2017_08_01_094450_create_blog_logo_table',5),(7,'2017_08_02_131849_create_blog_banner_table',5),(8,'2017_08_03_160541_create_article_ip_table',6);

#
# Source for table "password_resets"
#

DROP TABLE IF EXISTS `password_resets`;
CREATE TABLE `password_resets` (
  `email` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `token` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  KEY `password_resets_email_index` (`email`),
  KEY `password_resets_token_index` (`token`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

#
# Data for table "password_resets"
#


#
# Source for table "permissions"
#

DROP TABLE IF EXISTS `permissions`;
CREATE TABLE `permissions` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `permission_name` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `permission_url` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `description` varchar(255) COLLATE utf8mb4_unicode_ci DEFAULT NULL,
  PRIMARY KEY (`id`),
  UNIQUE KEY `permissions_permission_name_unique` (`permission_name`)
) ENGINE=InnoDB AUTO_INCREMENT=7 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

#
# Data for table "permissions"
#

INSERT INTO `permissions` VALUES (1,'管理员管理','admin.manage','2017-06-21 15:20:42','2017-06-21 15:20:42','1'),(2,'权限管理','permission.manage','2017-06-21 15:20:42','2017-06-21 15:20:42','2'),(3,'角色管理','role.manage','2017-06-21 15:20:42','2017-06-21 15:20:42','3'),(4,'主页','dashboard','2017-06-21 15:20:42','2017-06-21 15:20:42','4'),(6,'dd','ddd','2017-06-22 10:00:47','2017-06-22 10:00:47','d');

#
# Source for table "users"
#

DROP TABLE IF EXISTS `users`;
CREATE TABLE `users` (
  `id` int(10) unsigned NOT NULL AUTO_INCREMENT,
  `username` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `email` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `password` varchar(191) COLLATE utf8mb4_unicode_ci NOT NULL,
  `status` smallint(6) NOT NULL DEFAULT '1',
  `created_at` timestamp NULL DEFAULT NULL,
  `updated_at` timestamp NULL DEFAULT NULL,
  `is_super` smallint(6) NOT NULL DEFAULT '0',
  PRIMARY KEY (`id`),
  UNIQUE KEY `users_username_unique` (`username`),
  UNIQUE KEY `users_email_unique` (`email`)
) ENGINE=InnoDB AUTO_INCREMENT=25 DEFAULT CHARSET=utf8mb4 COLLATE=utf8mb4_unicode_ci;

#
# Data for table "users"
#

INSERT INTO `users` VALUES (1,'vince','709665818@qq.com','$2y$10$V2tV.rnmMOwJSiBu3B/qWuZDrBa7xY124rfZdn8nPpfwI3RJkBXA2',1,'2017-07-24 10:55:38','2017-07-24 10:55:38',0),(22,'vince2','810092804@qq.com','$2y$10$.AWUEaJWEOm./DtqF/QEm.5i.shnkmKxUfGE/SgdanScLHgVwHzBi',1,'2017-07-27 15:18:49','2017-07-27 15:18:49',0),(23,'b','777@qq.com','$2y$10$JfKZO4oJeOMLU9Omp6kJ8emjXZb.AkbqikHgTR.ROKs3SFtSHS.FK',1,'2017-07-28 14:55:21','2017-07-28 14:55:21',0),(24,'www','ww@qq.com','$2y$10$QOw6F31AZOgbrE7VZr261O3CHsPUYRnZtzICgDEw8Z2gFKAuSptHy',1,'2017-07-31 09:34:15','2017-07-31 09:34:15',0);

/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
